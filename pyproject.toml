[tool.ruff]
line-length = 110

builtins = [
	# translation lookup
	"_",
	# translation lookup
	"ngettext",
	# translation lookup
	"pgettext",
	# translation lookup
	"npgettext",
]

include = [
	"*.py",
	"sconstruct",
]

exclude = [
	".git",
	"__pycache__",
	# libaudioverse is a third-party module
	"addon/globalPlugins/audioScreen/libaudioverse/*.py",
	# libaudioverse64 is 64-bit version of a third-party module
	"addon/globalPlugins/audioScreen/libaudioverse64/*.py",
]

[tool.ruff.format]
indent-style = "tab"

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint]
ignore = [
	# indentation contains tabs
	"W191",
]

[tool.ruff.lint.per-file-ignores]
# sconstruct contains many inbuilt functions not recognised by the lint,
# so ignore F821.
"sconstruct" = ["F821"]

[tool.pyright]
pythonPlatform = "Windows"
typeCheckingMode = "strict"

include = [
	"**/*.py",
]

exclude = [
	"sconstruct",
	".git",
	"__pycache__",
	# When excluding concrete paths relative to a directory,
	# not matching multiple folders by name e.g. `__pycache__`,
	# paths are relative to the configuration file.
	# libaudioverse is a third-party module
	"addon/globalPlugins/audioScreen/libaudioverse/*.py",
	# libaudioverse64 is 64-bit version of a third-party module
	"addon/globalPlugins/audioScreen/libaudioverse64/*.py",
]

# Tell pyright where to load python code from
extraPaths = [
	"./addon",
]

# General config
analyzeUnannotatedFunctions = true
deprecateTypingAliases = true

# Stricter typing
strictParameterNoneValue = true
strictListInference = true
strictDictionaryInference = true
strictSetInference = true

# Compliant rules
reportAbstractUsage = true
reportAssertAlwaysTrue = true
reportAssertTypeFailure = true
reportAssignmentType = true
reportCallInDefaultInitializer = true
reportConstantRedefinition = true
reportDuplicateImport = true
reportFunctionMemberAccess = true
reportImplicitOverride = true
reportImplicitStringConcatenation = true
reportIncompatibleMethodOverride = true
reportIncompatibleVariableOverride = true
reportIncompleteStub = true
reportInconsistentConstructor = true
reportInconsistentOverload = true
reportIndexIssue = true
reportInvalidStringEscapeSequence = true
reportInvalidStubStatement = true
reportInvalidTypeArguments = true
reportInvalidTypeForm = true
reportInvalidTypeVarUse = true
reportMatchNotExhaustive = true
reportMissingModuleSource = true
reportMissingSuperCall = true
reportMissingTypeArgument = true
reportNoOverloadImplementation = true
reportOperatorIssue = true
reportOptionalCall = true
reportOptionalContextManager = true
reportOptionalOperand = true
reportOptionalSubscript = true
reportOverlappingOverload = true
reportPrivateImportUsage = true
reportPrivateUsage = true
reportPropertyTypeMismatch = true
reportRedeclaration = true
reportReturnType = true
reportSelfClsParameterName = true
reportShadowedImports = true
reportTypeCommentUsage = true
reportTypedDictNotRequiredAccess = true
reportUnboundVariable = true
reportUnhashable = true
reportUninitializedInstanceVariable = true
reportUnknownLambdaType = true
reportUnnecessaryCast = true
reportUnnecessaryComparison = true
reportUnnecessaryContains = true
reportUnnecessaryIsInstance = true
reportUnnecessaryTypeIgnoreComment = true
reportUnsupportedDunderAll = true
reportUntypedClassDecorator = true
reportUntypedNamedTuple = true
reportUnusedCallResult = true
reportUnusedClass = true
reportUnusedCoroutine = true
reportUnusedExcept = true
reportUnusedExpression = true
reportUnusedFunction = true
reportUnusedImport = true
reportWildcardImportFromLibrary = true

reportDeprecated = true

# Can be enabled by generating type stubs for modules via pyright CLI
reportMissingTypeStubs = false

# Bad rules
# These are sorted alphabetically and should be enabled and moved to compliant rules section when resolved.
reportArgumentType = false  # Unexpected argument types
reportAttributeAccessIssue = false  # image player
reportCallIssue = false  # image player
reportGeneralTypeIssues = false  # Seen throughout the global plugin
reportImportCycles = false  # image player/libaudioverse import
reportMissingImports = false  # Mostly NVDA Core modules
reportMissingParameterType = false  # Mostly wxPython and NVDA Core/gestures/classes
reportOptionalIterable = false  # None cannot be iterated
reportOptionalMemberAccess = false  # Objects een as None when in fact they can be instantiated
reportPossiblyUnboundVariable = false  # image player
reportUndefinedVariable = false  # _ = gettext.gettext call
reportUnknownArgumentType = false  # Mostly Python types
reportUnknownMemberType = false  # Some NVDA Core and global plugin attributes
reportUnknownParameterType = false  # Mostly NVDA Core and unknown Python parameter types
reportUnknownVariableType = false  # Mostly NVDA Core variables/attributes
reportUntypedBaseClass = false  # wxPython and NVDA Core classes
reportUntypedFunctionDecorator = false  # Script decorator
reportUnusedVariable = false  # Seen throughout the global plugin
